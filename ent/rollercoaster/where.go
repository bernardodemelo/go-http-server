// Code generated by ent, DO NOT EDIT.

package rollercoaster

import (
	"http-go/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldLTE(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldEQ(FieldName, v))
}

// Location applies equality check predicate on the "location" field. It's identical to LocationEQ.
func Location(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldEQ(FieldLocation, v))
}

// Height applies equality check predicate on the "height" field. It's identical to HeightEQ.
func Height(v float64) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldEQ(FieldHeight, v))
}

// Speed applies equality check predicate on the "speed" field. It's identical to SpeedEQ.
func Speed(v float64) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldEQ(FieldSpeed, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldContainsFold(FieldName, v))
}

// LocationEQ applies the EQ predicate on the "location" field.
func LocationEQ(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldEQ(FieldLocation, v))
}

// LocationNEQ applies the NEQ predicate on the "location" field.
func LocationNEQ(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldNEQ(FieldLocation, v))
}

// LocationIn applies the In predicate on the "location" field.
func LocationIn(vs ...string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldIn(FieldLocation, vs...))
}

// LocationNotIn applies the NotIn predicate on the "location" field.
func LocationNotIn(vs ...string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldNotIn(FieldLocation, vs...))
}

// LocationGT applies the GT predicate on the "location" field.
func LocationGT(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldGT(FieldLocation, v))
}

// LocationGTE applies the GTE predicate on the "location" field.
func LocationGTE(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldGTE(FieldLocation, v))
}

// LocationLT applies the LT predicate on the "location" field.
func LocationLT(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldLT(FieldLocation, v))
}

// LocationLTE applies the LTE predicate on the "location" field.
func LocationLTE(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldLTE(FieldLocation, v))
}

// LocationContains applies the Contains predicate on the "location" field.
func LocationContains(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldContains(FieldLocation, v))
}

// LocationHasPrefix applies the HasPrefix predicate on the "location" field.
func LocationHasPrefix(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldHasPrefix(FieldLocation, v))
}

// LocationHasSuffix applies the HasSuffix predicate on the "location" field.
func LocationHasSuffix(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldHasSuffix(FieldLocation, v))
}

// LocationEqualFold applies the EqualFold predicate on the "location" field.
func LocationEqualFold(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldEqualFold(FieldLocation, v))
}

// LocationContainsFold applies the ContainsFold predicate on the "location" field.
func LocationContainsFold(v string) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldContainsFold(FieldLocation, v))
}

// HeightEQ applies the EQ predicate on the "height" field.
func HeightEQ(v float64) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldEQ(FieldHeight, v))
}

// HeightNEQ applies the NEQ predicate on the "height" field.
func HeightNEQ(v float64) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldNEQ(FieldHeight, v))
}

// HeightIn applies the In predicate on the "height" field.
func HeightIn(vs ...float64) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldIn(FieldHeight, vs...))
}

// HeightNotIn applies the NotIn predicate on the "height" field.
func HeightNotIn(vs ...float64) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldNotIn(FieldHeight, vs...))
}

// HeightGT applies the GT predicate on the "height" field.
func HeightGT(v float64) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldGT(FieldHeight, v))
}

// HeightGTE applies the GTE predicate on the "height" field.
func HeightGTE(v float64) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldGTE(FieldHeight, v))
}

// HeightLT applies the LT predicate on the "height" field.
func HeightLT(v float64) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldLT(FieldHeight, v))
}

// HeightLTE applies the LTE predicate on the "height" field.
func HeightLTE(v float64) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldLTE(FieldHeight, v))
}

// SpeedEQ applies the EQ predicate on the "speed" field.
func SpeedEQ(v float64) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldEQ(FieldSpeed, v))
}

// SpeedNEQ applies the NEQ predicate on the "speed" field.
func SpeedNEQ(v float64) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldNEQ(FieldSpeed, v))
}

// SpeedIn applies the In predicate on the "speed" field.
func SpeedIn(vs ...float64) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldIn(FieldSpeed, vs...))
}

// SpeedNotIn applies the NotIn predicate on the "speed" field.
func SpeedNotIn(vs ...float64) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldNotIn(FieldSpeed, vs...))
}

// SpeedGT applies the GT predicate on the "speed" field.
func SpeedGT(v float64) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldGT(FieldSpeed, v))
}

// SpeedGTE applies the GTE predicate on the "speed" field.
func SpeedGTE(v float64) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldGTE(FieldSpeed, v))
}

// SpeedLT applies the LT predicate on the "speed" field.
func SpeedLT(v float64) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldLT(FieldSpeed, v))
}

// SpeedLTE applies the LTE predicate on the "speed" field.
func SpeedLTE(v float64) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.FieldLTE(FieldSpeed, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.RollerCoaster) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.RollerCoaster) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.RollerCoaster) predicate.RollerCoaster {
	return predicate.RollerCoaster(sql.NotPredicates(p))
}
