// Code generated by ent, DO NOT EDIT.

package rollercoaster

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the rollercoaster type in the database.
	Label = "roller_coaster"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldLocation holds the string denoting the location field in the database.
	FieldLocation = "location"
	// FieldHeight holds the string denoting the height field in the database.
	FieldHeight = "height"
	// FieldSpeed holds the string denoting the speed field in the database.
	FieldSpeed = "speed"
	// Table holds the table name of the rollercoaster in the database.
	Table = "roller_coasters"
)

// Columns holds all SQL columns for rollercoaster fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldLocation,
	FieldHeight,
	FieldSpeed,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultLocation holds the default value on creation for the "location" field.
	DefaultLocation string
	// DefaultHeight holds the default value on creation for the "height" field.
	DefaultHeight float64
	// DefaultSpeed holds the default value on creation for the "speed" field.
	DefaultSpeed float64
)

// OrderOption defines the ordering options for the RollerCoaster queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByLocation orders the results by the location field.
func ByLocation(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLocation, opts...).ToFunc()
}

// ByHeight orders the results by the height field.
func ByHeight(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldHeight, opts...).ToFunc()
}

// BySpeed orders the results by the speed field.
func BySpeed(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSpeed, opts...).ToFunc()
}
